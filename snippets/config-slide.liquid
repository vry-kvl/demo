{%- comment -%}
-------------------------------
JS SLIDE TO USE IS TINY SLIDER v1.9.3
-------------------------------
{%- endcomment-%}
{%- capture defaultGutter -%}{%- render 'snippet-section', type: 'spacing', sliderSpacing: true -%}{%- endcapture -%}
{%- liquid
	assign items 					= items | default: 1 | split: ','
	assign gutter 					= gutter | default: defaultGutter | split: ','
	assign navContainer 			= navContainer | default: false
	assign autoPlay 				= autoPlay | default: 0 | times: 1000
	assign mediaBreakPoint 			= '0,750,1000,1300' | split: ','
-%}

{%- capture items -%}
	{%- case items.size -%}
	  {%- when 1  -%}{{- items -}},{{- items -}},{{- items -}},{{- items -}}
	  {%- when 2  -%}{{- items[0] -}},{{- items[0] -}},{{- items[1] -}},{{- items[1] -}}
	  {%- when 3  -%}{{- items[0] -}},{{- items[1] -}},{{- items[1] -}},{{- items[2] -}}
	  {%- else    -%}{{- items[0] -}},{{- items[1] -}},{{- items[2] -}},{{- items[3] -}}
	{%- endcase -%}
{%- endcapture -%}

{%- capture gutter -%}
{%- case gutter.size -%}
	{%- when 1  -%}{{- gutter -}},{{- gutter -}},{{- gutter -}},{{- gutter -}}
	{%- when 2  -%}{{- gutter[0] -}},{{- gutter[0] -}},{{- gutter[1] -}},{{- gutter[1] -}}
	{%- when 3  -%}{{- gutter[0] -}},{{- gutter[1] -}},{{- gutter[1] -}},{{- gutter[2] -}}
	{%- else    -%}{{- gutter[0] -}},{{- gutter[1] -}},{{- gutter[2] -}},{{- gutter[3] -}}
{%- endcase -%}
{%- endcapture -%}

{%- liquid
	assign items 	= items | split: ','
	assign gutter 	= gutter | split: ','
-%}
{%- capture responsive -%}
	{%- for m in mediaBreakPoint -%}
		"{{m}}": {
			"items": {{items[forloop.index0]}},
			"gutter":{{gutter[forloop.index0] | json }}
		}
		{%- unless forloop.last -%},{%- endunless -%}
	{%- endfor -%}
{%- endcapture -%}

{%- if controls -%}
	{%- capture defaultControlsId -%}{{id}} .js-slider-controls{%- endcapture -%}

	{%- if controlsID == blank -%}
		<div class="slider-controls js-slider-controls">
			<button type="button" class="slider-prev-button js-prev-button">{% render 'svg' type: 'slideArrow_left' %}</button>
			<button type="button" class="slider-next-button js-next-button">{% render 'svg' type: 'slideArrow_right' %}</button>
		</div>
	{%- endif -%}
	{%- assign controlsID = controlsID | default: defaultControlsId -%}
{%- endif -%}

{%- if navContainer != false -%}
	{%- assign dots = true -%}
{%- endif -%}

<script type="application/json">
{
	"container": "{{id}} .js-slider"
    ,"axis" : {{axis | default: 'horizontal' | json}}
    ,"autoHeight" : {{autoHeight | default: false}}
    ,"loop" : {{loop | default: false}}
    ,"center" : {{center | default: false}}
    ,"controls" : {{controls | default: false}}
	,"controlsContainer" : {% if controlsID == blank %}false{% else %}{{controlsID | json }}{% endif %}
    ,"nav" : {{dots | default: false}}
	,"mouseDrag" : true
	,"navPosition": "bottom"
	,"navContainer": {% if navContainer != false %}"{{navContainer}}"{% else %}false{% endif %}
	,"navAsThumbnails": {% if navContainer != false %}true{% else %}false{% endif %}
	,"autoplayButtonOutput" : false
	,"preventActionWhenRunning": false
	,"preventScrollOnTouch" : false
	,"items" : {{ items[0] }}
	,"gutter" : {{ gutter[0] | json }}
	{%- comment -%}
	,"animateIn": "go-animateIn"
	,"animateOut": "go-animateOut"
	{%- endcomment-%}
	,"mode": {{mode | default: 'carousel' | json}}
	,"responsive" : { {{responsive}} }
	{%- if autoPlay > 0 -%}
	,"autoplay" : {% if autoPlay > 0 %}true{% else %}false{% endif %}
	,"autoplayTimeout": {{autoPlay}}
	{%- endif -%}
}
</script>